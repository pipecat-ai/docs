{
  "openapi": "3.0.0",
  "info": {
    "title": "Pipecat Cloud",
    "version": "1.0.0",
    "description": "Private API for Pipecat Cloud agent management"
  },
  "servers": [
    {
      "url": "https://api.pipecat.daily.co/v1",
      "description": "API server"
    }
  ],
  "paths": {
    "/agents/{agentName}": {
      "get": {
        "summary": "Get agent details",
        "operationId": "getService",
        "security": [
          {
            "PrivateKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "agentName",
            "in": "path",
            "required": true,
            "description": "Name of the agent to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agent details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceDetailsResponse"
                },
                "example": {
                  "name": "voice-starter",
                  "ready": true,
                  "createdAt": "2025-04-09T15:01:17.414Z",
                  "updatedAt": "2025-04-18T20:29:19.181Z",
                  "activeDeploymentId": "4cab03c7-8f53-418d-9c3c-91a1265d179e",
                  "activeDeploymentReady": true,
                  "autoScaling": {
                    "maxReplicas": 10,
                    "minReplicas": 1
                  },
                  "activeSessionCount": 0,
                  "deployment": {
                    "id": "4cab03c7-8f53-418d-9c3c-91a1265d179e",
                    "manifest": {
                      "apiVersion": "pipecatcloud.daily.co/v1",
                      "kind": "PCService",
                      "metadata": {
                        "name": "voice-starter",
                        "namespace": "tiny-ferret-maroon-123"
                      },
                      "spec": {
                        "dailyNodeType": "arm",
                        "clusterLocal": true,
                        "image": "your-dockername/voice-starter:0.1",
                        "autoScaling": {
                          "minReplicas": 1,
                          "maxReplicas": 10
                        },
                        "envFromSecretNames": ["voice-starter-secrets"],
                        "krispModels": {
                          "enabled": false
                        }
                      }
                    },
                    "serviceId": "c359e1ea-64d6-4bcf-a7c6-28d3bd1c8909",
                    "createdAt": "2025-04-18T20:29:19.177Z",
                    "updatedAt": "2025-04-18T20:29:19.177Z"
                  },
                  "agentProfile": "agent-1x"
                }
              }
            }
          },
          "404": {
            "description": "Agent not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "PrivateKeyAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Authentication requires a Pipecat Cloud Private API token. Generate a Private API key from your Dashboard (Settings > API Keys > Private > Create key) and include it as a Bearer token in the Authorization header."
      }
    },
    "schemas": {
      "ServiceDetailsResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the agent"
          },
          "ready": {
            "type": "boolean",
            "description": "Whether the agent is ready to accept sessions"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp of the agent"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          },
          "activeDeploymentId": {
            "type": "string",
            "description": "ID of the active deployment"
          },
          "activeDeploymentReady": {
            "type": "boolean",
            "description": "Whether the active deployment is ready"
          },
          "autoScaling": {
            "type": "object",
            "properties": {
              "maxReplicas": {
                "type": "integer",
                "description": "Maximum number of replicas"
              },
              "minReplicas": {
                "type": "integer",
                "description": "Minimum number of replicas"
              }
            }
          },
          "activeSessionCount": {
            "type": "integer",
            "description": "Number of active sessions"
          },
          "deployment": {
            "type": "object",
            "description": "Details of the current deployment",
            "properties": {
              "id": {
                "type": "string",
                "description": "Deployment ID"
              },
              "manifest": {
                "type": "object",
                "description": "Kubernetes manifest for the deployment"
              },
              "serviceId": {
                "type": "string",
                "description": "Service ID"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Creation timestamp of the deployment"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Last update timestamp of the deployment"
              }
            }
          },
          "agentProfile": {
            "type": "string",
            "description": "The agent profile used for resource allocation",
            "nullable": true
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          },
          "code": {
            "type": "string",
            "description": "Error code"
          }
        }
      }
    }
  },
  "security": [
    {
      "PrivateKeyAuth": []
    }
  ]
}
